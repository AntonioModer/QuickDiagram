<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:view="clr-namespace:Codartis.SoftVis.UI.Wpf.View"
                    xmlns:util="clr-namespace:Codartis.SoftVis.Util.UI.Wpf.Converters;assembly=SoftVis.Util"
                    mc:Ignorable="d">

    <util:ThicknessToDoubleConverter x:Key="ThicknessToDoubleConverter"/>
    <util:ThicknessMultiplierConverter x:Key="ThicknessMultiplierConverter"/>
    <util:DoubleMultiplierConverter x:Key="DoubleMultiplierConverter"/>

    <ControlTemplate x:Key="EllipseDiagramNodeButton" TargetType="{x:Type view:DiagramNodeButton}">
        <Grid>
            <Ellipse x:Name="ButtonBackground" Fill="{TemplateBinding Background}" />
            <Ellipse x:Name="MouseOverEffect" Fill="White" Opacity=".7"
                     Visibility="Collapsed" IsHitTestVisible="False" />
            <Ellipse x:Name="PressedEffect" Fill="Black" Opacity=".4"
                     Visibility="Collapsed" IsHitTestVisible="False" />

            <ContentPresenter x:Name="contentPresenter"
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              IsEnabled="{TemplateBinding IsEnabled}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}"
                              Width="{TemplateBinding Width,
                                  Converter={StaticResource DoubleMultiplierConverter}, 
                                  ConverterParameter=.7}"
                              Height="{TemplateBinding Height, 
                                  Converter={StaticResource DoubleMultiplierConverter}, 
                                  ConverterParameter=.7}" />
            
            <Ellipse x:Name="Border" 
                     Fill="Transparent" 
                     StrokeThickness="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToDoubleConverter}}" 
                     Stroke="{TemplateBinding BorderBrush}"/>
            <Ellipse x:Name="FocusEffect"
                     StrokeThickness="{TemplateBinding BorderThickness, 
                        Converter={StaticResource ThicknessMultiplierConverter},
                        ConverterParameter=10}"
                     Visibility="Collapsed" IsHitTestVisible="False" />
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="PressedEffect" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="False">
                <Setter TargetName="PressedEffect" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="MouseOverEffect" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter TargetName="MouseOverEffect" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter TargetName="FocusEffect" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="False">
                <Setter TargetName="FocusEffect" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="DarkGray"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <Style TargetType="{x:Type view:DiagramNodeButton}">
        <Setter Property="Template" Value="{StaticResource EllipseDiagramNodeButton}"/>
    </Style>

</ResourceDictionary>